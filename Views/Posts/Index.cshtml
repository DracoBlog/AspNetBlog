@*@using Blog.Classes
@using Blog.Models
@model IEnumerable<Post>*@
@model PagedList.IPagedList<Blog.Models.Post>
@using Blog.Classes
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Posts</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            Title
        </th>
        <th>
            Content
        </th>
        <th>
            Date
        </th>
        <th>
            Author
        </th>
        <th>
            Actions
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Utils.CutText(item.Body)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @if (item.Author != null)
                {
                    @item.Author.FullName
                    @: (@item.Author.UserName)
                }
                else
                {
                    <i>(no author)</i>
                }
            </td>
            <td>
                @if (User.IsInRole("Administrators") || (item.Author != null && User.Identity.Name == item.Author.UserName))
                {
                    @Html.ActionLink("Edit", "Edit", new {id = item.Id})
                    @:|
                }
                @Html.ActionLink("Details", "Details", new {id = item.Id}) |
                @if (User.IsInRole("Administrators") || (item.Author != null && User.Identity.Name == item.Author.UserName))
                {
                    @Html.ActionLink("Delete", "Delete", new {id = item.Id})
                    @:|
                }
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page }))
